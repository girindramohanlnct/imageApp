{"version":3,"sources":["./src/app/image.service.ts","./src/app/image/image.component.ts","./src/app/image/image.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/mime-type.validator.ts","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Image } from './model';\n\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private http: HttpClient) { }\n\n  getImages() {\n    return this.http.get<{ status: boolean, data: [Image] }>(environment.apiUrl + 'show');\n  }\n\n  getImage(id) {\n    console.log(\"services \", id)\n    return this.http.get<{ status: boolean, data: [Image] }>(environment.apiUrl + 'show/' + id);\n  }\n\n  saveIamge(name: string, details: string, image: File) {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('details', details);\n    formData.append('file', image)\n    return this.http.post<{ data: Image }>(environment.apiUrl, formData);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ImageService } from '../image.service';\nimport { Image } from '../model';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.css']\n})\nexport class ImageComponent implements OnInit {\n\n  img: Image;\n  id;\n\n  constructor(private imgServise: ImageService, public route: ActivatedRoute) {\n\n    this.route.paramMap.subscribe((res) => {\n      console.log(res['params']);\n      this.id = res['params']['id'];\n      console.log(this.id)\n    })\n\n    this.imgServise.getImage(this.id).subscribe(res => {\n      console.log(res);\n      this.img = res.data[0];\n    }, err =>\n      console.error(err)\n    )\n\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n}\n","<div class=\"main\">\n    <div style=\"width: 70%; height: 100%;\">\n        <div class=\"img\">\n            <img [src]='img.url' style=\"width: 80%;\" />\n        </div>\n    </div>\n    <div class=\"text\">\n        <div class=\"textFlex\">\n            <div>\n                <div style=\"display: inline;\">\n                    <h2\n                        style=\"font-weight: bold; padding: 10px; margin: 10px; border: 1px grey solid; border-radius: 8px;\">\n                        <span>Image Name: </span>\n                        <span style=\"color: orange; margin-left: 10%;\"> {{img.name}}</span>\n                    </h2>\n                </div>\n                <div style=\"display: inline; margin-top: 50%;\">\n                    <h2\n                        style=\"font-weight: bold; padding: 10px; margin: 10px; border: 1px grey solid; border-radius: 8px;\">\n                        <span>Image Deatils: </span>\n                        <span style=\"color: orange; margin-left: 10%;\"> {{img.details}}</span>\n                    </h2>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../image.service';\nimport { Image } from '../model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  imgs: [Image];\n  status: boolean;\n\n  constructor(private imgService: ImageService) { }\n\n  ngOnInit(): void {\n    this.imgService.getImages().subscribe(res => {\n      if (res.data) {\n        this.status = true;\n        this.imgs = [...res.data];\n        console.log(this.imgs)\n      } else {\n        this.status = false;\n        this.imgs = null;\n      }\n\n    })\n  }\n\n}\n","<div class=\"container\" *ngIf=\"imgs.length <= 0\">\n    <!-- <div class=\"container-fluid\" style=\"display: flex;\">\n        <div class=\"container-fluid row\">\n            <div style=\"margin: 10px;;\" class=\"card\" *ngFor=\"let img of imgs\" style=\"width: 18rem;\">\n                <img class=\"card-img-top\" [src]=\"img.url\" [alt]=\"img.name\">\n                \n            </div>\n        </div>\n    </div> -->\n    <div>\n        <div class=\"grid-image\">\n            <div style=\"margin: 10px;;\" *ngFor=\"let img of imgs\">\n                <img style=\"cursor: pointer;\" [routerLink]=\"['/show', img.id]\" class=\"card-img-top\" [src]=\"img.url\"\n                    [alt]=\"img.name\">\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"!status\">\n        <P>No Images yet!!!!!!!!!!!...........</P>\n    </div>\n    <!-- <button type=\"button\" class=\"btn btn-primary\">Button</button> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"https://images-web.herokuapp.com/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (control: AbstractControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n    if (typeof (control.value) === 'string') {\r\n        return of(null);\r\n    }\r\n    const fileReader = new FileReader();\r\n    const file = control.value as File;\r\n    // tslint:disable-next-line: deprecation\r\n    const frobs = new Observable((observer: Observer<{ [key: string]: any }>) => {\r\n        fileReader.addEventListener('onloadend', () => {\r\n            const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n            let header = '';\r\n            let isValid = true;\r\n            // tslint:disable-next-line: whitespace\r\n            // tslint:disable-next-line: prefer-for-of\r\n            for (let i = 0; i < arr.length; i++) {\r\n                header += arr[i].toString(16);\r\n            }\r\n            switch (header) {\r\n                case '89504e47':\r\n                    isValid = true;\r\n                    break;\r\n                case 'ffd8ffe0':\r\n                case 'ffd8ffe1':\r\n                case 'ffd8ffe2':\r\n                case 'ffd8ffe3':\r\n                case 'ffd8ffe8':\r\n                    isValid = true;\r\n                    break;\r\n                default:\r\n                    isValid = false; // Or you can use the blob.type as fallback\r\n                    break;\r\n            }\r\n            if (isValid) {\r\n                observer.next(null);\r\n            } else {\r\n                observer.next({ invalidMimeType: true });\r\n            }\r\n            observer.complete();\r\n        });\r\n        fileReader.readAsArrayBuffer(file);\r\n    });\r\n    return frobs;\r\n};","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Image } from '../model';\nimport { mimeType } from '../mime-type.validator';\nimport { ImageService } from '../image.service';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  private mode = 'create';\n  private postId: string;\n  img: Image\n  isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n  enteredTitle = '';\n  enteredContent = '';\n\n  constructor(private imgService: ImageService, private route: Router) { }\n\n  ngOnInit(): void {\n\n    this.form = new FormGroup({\n      name: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      details: new FormControl(null, { validators: [Validators.required] }),\n      image: new FormControl(null, { validators: [Validators.required], asyncValidators: [mimeType] })\n    });\n  }\n\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    console.log(\"saving\");\n    this.imgService.saveIamge(this.form.value.name, this.form.value.details, this.form.value.image).subscribe(res => {\n      console.log(\"saved\");\n      this.form.reset();\n      this.route.navigate(['/']);\n    })\n  }\n\n}\n","<mat-card>\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\">\n        <mat-form-field>\n            <input type=\"text\" name=\"name\" matInput formControlName=\"name\" placeholder=\"Image Name\">\n            <mat-error *ngIf=\"form.get('name').invalid\">Please Enter Valid Title</mat-error>\n        </mat-form-field>\n        <div>\n            <button mat-stroked-button type=\"button\" color=\"accent\" (click)=\"filePicker.click()\">Pick Image</button>\n            <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n        </div>\n        <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview\">\n            <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n        </div>\n        <mat-form-field>\n            <textarea matInput row=\"6\" name=\"details\" formControlName=\"details\" placeholder=\"Image Deatails\">\n            </textarea>\n            <mat-error *ngIf=\"form.get('details').invalid\">Please Enter Valid Content</mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Save post</button>\n    </form>\n\n</mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'imageapp';\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\n\n\nimport { ImageComponent } from './image/image.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    ImageComponent,\n    UploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">ImageApp</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <!-- <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Link</a>\n            </li>\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a class=\"dropdown-item\" href=\"#\">Action</a>\n                    <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                </div>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n            </li> -->\n        </ul>\n        <!-- <form class=\"form-inline my-2 my-lg-0\"> -->\n        <!-- <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"> -->\n        <button class=\"btn btn-primary\" [routerLink]=\"['/new']\" type=\"submit\">New</button>\n        <!-- </form> -->\n    </div>\n</nav>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ImageComponent } from './image/image.component';\nimport { UploadComponent } from './upload/upload.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'show/:id', component: ImageComponent },\n  { path: 'show', component: HomeComponent },\n  { path: 'new', component: UploadComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}